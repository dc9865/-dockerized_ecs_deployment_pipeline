image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

build:
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME

test:
  stage: test
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker pull $IMAGE_NAME
    - docker run -d --name test_container -p 5000:5000 $IMAGE_NAME
    - apk --no-cache add curl # install curl
    - container_ip=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' test_container)
    - |
      for i in $(seq 1 30); do if curl -f http://$container_ip:5000/; then break; fi; sleep 5; done

    # Display container logs for debugging purposes
    - docker logs test_container

    # Stop and remove the container
    - docker stop test_container
    - docker rm test_container
  after_script:
    - docker logout "$CI_REGISTRY"


deploy:
  stage: deploy
  image: amazonlinux
  script:
    - yum install -y aws-cli jq
    - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
    - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
    - aws configure set region "us-east-1"
    - aws ecs update-service --cluster DevCluster --service deployWeb --force-new-deployment
  only:
    - main
